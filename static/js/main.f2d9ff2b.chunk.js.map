{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","id","name","email","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overflow","border","height","children","App","changeOnSearch","event","setState","searchfield","target","value","state","fetch","then","response","json","users","filteredRobots","this","filter","robot","toLowerCase","includes","length","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"iOAceA,EAZF,SAACC,GACV,OACI,sBAAKC,UAAU,kDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAAMI,GAAhC,cACjB,gCACI,6BAAKJ,EAAMK,OACX,4BAAIL,EAAMM,eCOfC,EAZE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACA,8BAEIA,EAAOC,KAAI,SAACC,EAAMC,GACd,OAAO,cAAC,EAAD,CAAyBP,GAAII,EAAOG,GAAGP,GAAIC,KAAMG,EAAOG,GAAGN,KAAMC,MAAOE,EAAOG,GAAGL,OAAvEE,EAAOG,GAAGP,UCEzBQ,EARG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjB,OACI,8BACI,uBAAOZ,UAAU,mCAAmCa,KAAK,SAASC,YAAY,gBAAgBC,SAAYH,OCKvGI,EARA,SAACjB,GACZ,OACI,qBAAKkB,MAAO,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,UAArE,SACKrB,EAAMsB,YCuCJC,G,wDApCX,aAAe,IAAD,8BACV,gBAOJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAP1C,EAAKC,MAAQ,CACTtB,OAAQ,GACRmB,YAAa,IAJP,E,qDAYd,WAAqB,IAAD,OAChBI,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAAQF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAElB,OAAQ2B,S,oBAEhI,WAAU,IAAD,OACCC,EAAiBC,KAAKP,MAAMtB,OAAO8B,QAAO,SAAAC,GAC5C,OAAOA,EAAMlC,KAAKmC,cAAcC,SAAS,EAAKX,MAAMH,YAAYa,kBAEpE,OAAiC,IAA7BH,KAAKP,MAAMtB,OAAOkC,OACX,2CAGH,sBAAKzC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,oBACA,cAAC,EAAD,CAAWY,aAAcwB,KAAKb,iBAC9B,cAAC,EAAD,UACK,cAAC,EAAD,CAAUhB,OAAQ4B,a,GA5BzBO,IAAMC,YCKTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCEdO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDX,M","file":"static/js/main.f2d9ff2b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = (props) => {\r\n    return (\r\n        <div className='bg-light-blue dib br3 pa3 ma2 grow bw2 shadow-5' >\r\n            <img alt='robots' src={`https://robohash.org/${props.id}?200x200`} />\r\n                <div>\r\n                    <h2>{props.name}</h2>\r\n                    <p>{props.email}</p>\r\n                </div>                    \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n    return (\r\n    <div>            \r\n    {\r\n        robots.map((user, i) => {\r\n            return <Card key={robots[i].id} id={robots[i].id} name={robots[i].name} email={robots[i].email} />\r\n        })\r\n    }\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n    return (\r\n        <div>\r\n            <input className='pa2 ba b--green bg-lightest-blue' type='search' placeholder='Search robots' onChange = {searchChange}/>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{ overflow: 'scroll', border: '1px solid black', height: '1000px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Scroll;","import React from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll'\r\nimport './App.css'\r\n\r\n\r\nclass App extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    changeOnSearch = (event) => {\r\n        this.setState({ searchfield: event.target.value });        \r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState({ robots: users }));        \r\n    }\r\n    render() {\r\n        const filteredRobots = this.state.robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n        })\r\n        if (this.state.robots.length === 0)\r\n            return <h1>Loading..</h1>\r\n        else {\r\n            return (\r\n                <div className='tc'>\r\n                    <h1 className='f1'>Robots</h1>\r\n                    <SearchBox searchChange={this.changeOnSearch} />\r\n                    <Scroll>\r\n                         <CardList robots={filteredRobots} />\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App.js';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}